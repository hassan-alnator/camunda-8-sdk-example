import { ZBLoggerConfig } from './interfaces-1.0';
import { Loglevel } from './interfaces-published-contract';
export declare class ZBLogger {
    _tag: 'ZBCLIENT' | 'ZBWORKER';
    loglevel: Loglevel;
    private colorFn;
    private taskType?;
    private id?;
    private stdout;
    private colorise;
    private pollInterval?;
    private namespace;
    constructor({ loglevel, color, id, namespace, stdout, taskType, colorise, pollInterval, _tag, }: ZBLoggerConfig);
    info(message: unknown, ...optionalParameters: any[]): void;
    error(message: any, ...optionalParameters: unknown[]): void;
    debug(message: string, ...optionalParameters: unknown[]): void;
    log(message: string, ...optionalParameters: unknown[]): void;
    private makeMessage;
    private _colorise;
}
