import { CamundaPlatform8Configuration, DeepPartial } from '../../lib';
import { IOAuthProvider } from '../../oauth';
import { TopologyResponse } from '../types';
/**
 * JSON object with changed task attribute values.
 */
interface TaskChangeSet {
    dueDate?: Date | string;
    followUpDate?: Date | string;
    candidateUsers?: string[];
    candidateGroups?: string[];
}
/**
 * @deprecated Since 8.6. Please use `C8RestClient` instead.
 */
export declare class ZeebeRestClient {
    private userAgentString;
    private oAuthProvider;
    private rest;
    constructor(options?: {
        config?: DeepPartial<CamundaPlatform8Configuration>;
        oAuthProvider?: IOAuthProvider;
    });
    private getHeaders;
    getTopology(): Promise<TopologyResponse>;
    completeUserTask({ userTaskKey, variables, action, }: {
        userTaskKey: string;
        variables?: Record<string, unknown>;
        action?: string;
    }): Promise<import("got").Response<string>>;
    assignTask({ userTaskKey, assignee, allowOverride, action, }: {
        userTaskKey: string;
        assignee: string;
        allowOverride?: boolean;
        action: string;
    }): Promise<import("got").Response<string>>;
    /** Update a user task with the given key. */
    updateTask({ userTaskKey, changeset, }: {
        userTaskKey: string;
        changeset: TaskChangeSet;
    }): Promise<import("got").Response<string>>;
    removeAssignee({ userTaskKey }: {
        userTaskKey: string;
    }): Promise<import("got").Response<string>>;
}
export {};
