export interface ClusterClient {
    name: string;
    clientId: string;
    permissions: ('Zeebe' | 'Operate' | 'Tasklist')[];
}
export interface CreatedClusterClient {
    uuid: string;
    clientId: string;
    clientSecret: string;
}
export interface ClusterClientConnectionDetails {
    name: string;
    ZEEBE_ADDRESS: string;
    ZEEBE_CLIENT_ID: string;
    ZEEBE_AUTHORIZATION_SERVER_URL: string;
}
export type ClusterStatusstring = 'Healthy' | 'Unhealthy' | 'Creating' | 'Updating';
export interface Cluster {
    uuid: string;
    name: string;
    ownerId: string;
    created: string;
    planType: {
        name: string;
        uuid: string;
    };
    region: {
        name: string;
        uuid: string;
    };
    generation: {
        name: string;
        uuid: string;
    };
    channel: {
        name: string;
        uuid: string;
    };
    status: {
        optimizeStatus: ClusterStatusstring;
        tasklistStatus: ClusterStatusstring;
        operateStatus: ClusterStatusstring;
        zeebeStatus: ClusterStatusstring;
        ready: ClusterStatusstring;
    };
    links: {
        connectors: string;
        console: string;
        optimize: string;
        tasklist: string;
        operate: string;
        zeebe: string;
    };
}
export interface CreateClusterBody {
    name: string;
    planTypeId: string;
    channelId: string;
    generationId: string;
    regionId: string;
}
export interface Parameters {
    channels: [
        {
            allowedGenerations: [
                {
                    name: string;
                    uuid: string;
                }
            ];
            defaultGeneration: {
                name: string;
                uuid: string;
            };
            name: string;
            uuid: string;
        }
    ];
    clusterPlanTypes: [
        {
            name: string;
            uuid: string;
        }
    ];
    regions: [
        {
            name: string;
            uuid: string;
        }
    ];
}
export type OrganizationRole = 'member' | 'admin' | 'owner' | 'supportagent' | 'operationsengineer' | 'taskuser' | 'analyst' | 'developer' | 'visitor';
export interface Member {
    name: string;
    email: string;
    roles: OrganizationRole[];
    invitePending: boolean;
}
